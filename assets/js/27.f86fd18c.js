(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{390:function(t,v,_){"use strict";_.r(v);var s=_(49),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"一个页面从输入-url-到页面加载显示完成-这个过程中都-发生了什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一个页面从输入-url-到页面加载显示完成-这个过程中都-发生了什么"}},[t._v("#")]),t._v(" 一个页面从输入 URL 到页面加载显示完成，这个过程中都 发生了什么")]),t._v(" "),_("p",[_("strong",[t._v("分为 4 个步骤")])]),t._v(" "),_("ol",[_("li",[t._v("当发送一个 URL 请求时，不管这个 URL 是 Web 页面的 URL 还 是 Web 页面上每个资源的 URL，浏览器都会开启一个线程来处理这个 请求，同时在远程 DNS 服务器上启动一个 DNS 查询。这能使浏览器 获得请求对应的 IP 地址。")]),t._v(" "),_("li",[t._v("浏览器与远程 Web 服务器通过 TCP 三次握手协商来建立一个TCP/IP 连接。该握手包括一个同步报文，一个同步-应答报文和一个应 答报文，这三个报文在 浏览器和服务器之间传递。该握手首先由客户端 尝试建立起通信，然后服务器响应并接受客户端的请求，最后由客户端 发出该请求已经被接受的报文。")]),t._v(" "),_("li",[t._v("一旦 TCP/IP 连接建立，浏览器会通过该连接向远程服务器发送 HTTP 的 GET 请求。远程服务器找到资源并使用 HTTP 响应返回该资源。")]),t._v(" "),_("li",[t._v("此时，Web 服务器提供资源服务，客户端开始下载资源。")])]),t._v(" "),_("h2",{attrs:{id:"get-请求传参长度的误区"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#get-请求传参长度的误区"}},[t._v("#")]),t._v(" get 请求传参长度的误区")]),t._v(" "),_("p",[_("strong",[t._v("误区")]),t._v("：我们经常说 get 请求参数的大小存在限制，而 post 请求的 参数大小是无限制的。实际上 HTTP 协议从未规定 GET/POST 的请 求长度限制是多少。对 get 请求参数的限制是来源与浏览器或 web 服务器，浏览器或 web 服务器限制了 url 的长度。为了明确这个概 念，我们必须再次强调下面几点:")]),t._v(" "),_("ul",[_("li",[t._v("HTTP 协议 未规定 GET 和 POST 的长度限制")]),t._v(" "),_("li",[t._v("GET 的最大长度显示是因为 浏览器和 web 服务器限制了 URI 的 长度不同的浏览器和 WEB 服务器，限制的最大长度不一样要支持 IE，则最大长度为 2083byte，若只支持 Chrome，则最大长度 8182byte")])]),t._v(" "),_("h2",{attrs:{id:"补充-get-和-post-请求在缓存方面的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#补充-get-和-post-请求在缓存方面的区别"}},[t._v("#")]),t._v(" 补充 get 和 post 请求在缓存方面的区别")]),t._v(" "),_("ul",[_("li",[t._v("get 和 post 在缓存方面的区别：get 请求类似于查找的过程，用户获取数据，可以不用每次都与数据库连接，所以可以使用缓存。")]),t._v(" "),_("li",[t._v("post 不同，post 做的一般是修改和删除的工作，所以必须与数据 库交互，所以不能使用缓存。因此 get 请求适合于请求缓存。")])]),t._v(" "),_("h2",{attrs:{id:"http-是什么-有什么特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-是什么-有什么特点"}},[t._v("#")]),t._v(" http 是什么？有什么特点")]),t._v(" "),_("p",[t._v("http 叫做超文本传输协议，是互联网应用最广泛的一种网络协议"),_("br"),t._v("\n特点：基于请求-响应的模式 无状态保存 无连接")]),t._v(" "),_("h2",{attrs:{id:"http-协议和-https-区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-协议和-https-区别"}},[t._v("#")]),t._v(" HTTP 协议和 HTTPS 区别")]),t._v(" "),_("p",[t._v("http 是超文本传输协议，信息是明文传输，https 是具有安全性的 ssl 解 密传输协议")]),t._v(" "),_("p",[t._v("http 和 https 连接方式完全不同，端口也不同，http 是 80，https 是 443 http 的连接很简单，是无状态的，https 协议是由 ssl+http 协议构建的 可进行加密传输，身份认证的网络协议，比 http 协议安全")]),t._v(" "),_("h2",{attrs:{id:"你如何对网站的文件和资源进行优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#你如何对网站的文件和资源进行优化"}},[t._v("#")]),t._v(" 你如何对网站的文件和资源进行优化")]),t._v(" "),_("ol",[_("li",[t._v("文件合并（目的是减少 http 请求）")]),t._v(" "),_("li",[t._v("文件压缩（目的是直接减少文件下载的体积）")]),t._v(" "),_("li",[t._v("使用 cdn 托管资源")]),t._v(" "),_("li",[t._v("使用缓存")]),t._v(" "),_("li",[t._v("gizp 压缩你的 js 和 css 文件")]),t._v(" "),_("li",[t._v("meta 标签优化（title,description,keywords）、heading 标签的优 化、alt 优化")]),t._v(" "),_("li",[t._v("反向链接，网站外链接优化")])]),t._v(" "),_("h2",{attrs:{id:"请简述-ajax-的执行过程-以及常见的-http-状态码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#请简述-ajax-的执行过程-以及常见的-http-状态码"}},[t._v("#")]),t._v(" 请简述 ajax 的执行过程 以及常见的 HTTP 状态码")]),t._v(" "),_("p",[t._v("100：这个状态码是告诉客户端应该继续发送请求，这个临时响应是用来 通知客户端的，部分的请求服务器已经接受，但是客户端应继续发送求 请求的剩余部分，如果请求已经完成，就忽略这个响应，而且服务器会 在请求完成后向客户发送一个最终的结果。"),_("br"),t._v("\n200：这个是最常见的 http 状态码，表示服务器已经成功接受请求，并 将返回客户端所请求的最终结果。"),_("br"),t._v("\n202：表示服务器已经接受了请求，但是还没有处理，而且这个请求最终 会不会处理还不确定。"),_("br"),t._v("\n204：服务器成功处理了请求，但没有返回任何实体内容 ，可能会返回 新的头部元信息。"),_("br"),t._v("\n301：客户端请求的网页已经永久移动到新的位置，当链接发生变化时， 返回 301 代码告诉客户端链接的变化，客户端保存新的链接，并向新的 链接发出请求，已返回请求结果。"),_("br"),t._v("\n404：请求失败，客户端请求的资源没有找到或者是不存在。"),_("br"),t._v("\n500：服务器遇到未知的错误，导致无法完成客户端当前的请求。"),_("br"),t._v("\n503：服务器由于临时的服务器过载或者是维护，无法解决当前的请求。"),_("br")]),t._v(" "),_("h2",{attrs:{id:"预加载和懒加载的区别-预加载在什么时间加载合适"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#预加载和懒加载的区别-预加载在什么时间加载合适"}},[t._v("#")]),t._v(" 预加载和懒加载的区别，预加载在什么时间加载合适")]),t._v(" "),_("p",[t._v("预加载是指在页面加载完成之前，提前将所需资源下载，之后使用 的时候从缓存中调用；懒加载是延迟加载，按照一定的条件或者需求等 到满足条件的时候再加载对应的资源。")]),t._v(" "),_("p",[t._v("两者主要区别是一个是提前加载，一个是迟缓甚至不加载。懒加载对服 务器前端有一定的缓解压力作用，预加载则会增加服务器前端压力。")])])}),[],!1,null,null,null);v.default=a.exports}}]);